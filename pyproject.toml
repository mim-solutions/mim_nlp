[tool.poetry]
name = "mim_nlp"
version = "0.2.0"
packages = [{include = "mim_nlp"}]
description = "A Python package with ready-to-use models for various NLP tasks and text preprocessing utilities. The implementation allows fine-tuning."
authors = [
    "Michał Brzozowski",
    "Marek Wachnicki",
    "Przemysław Kaleta",
]
readme = "README.md"
license = "MIT"
repository = "https://github.com/mim-solutions/mim_nlp"
keywords = [
    "nlp", "natural-language-processing", "machine-learning", "deep-learning", "neural-network", "transfer-learning",
    "text-classification", "text-regression", "seq2seq", "summarization", "text", "text-preprocessing", "text-cleaning",
    "lemmatization", "deduplication", "transformers", "pytorch",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/mim-solutions/mim_nlp/issues"

# main dependency group
[tool.poetry.dependencies]
python = "^3.9"

numpy = "^1.24.1"

# classifier extra
matplotlib = { version = "^3.7.1", optional = true }
pytorch-lightning = {version = ">=1.5", optional = true }
torchmetrics = {version = "^1.0.0", optional = true }
# preprocessing extra
advertools = { version = "^0.13.2", optional = true }
gensim = { version = "^4.3.1", optional = true }
morfeusz2 = { version = "^1.99.7", optional = true }
scipy = { version = "^1.10.1", optional = true }
# seq2seq extra
accelerate = { version = "^0.20.1", optional = true }
loguru = { version = "^0.7.0", optional = true }
more-itertools = { version = "^9.1.0", optional = true }
scikit-learn = { version = "^1.2.2", optional = true }
torch = { version = ">=1.7.1", optional = true }
tqdm = { version = "^4.65.0", optional = true }
transformers = { version = "^4.29.2", optional = true }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
accelerate = "^0.20.1"
advertools = "^0.13.2"
datasets = "^2.12.0"
gensim = "^4.3.1"
loguru = "^0.7.0"
matplotlib = "^3.7.1"
more-itertools = "^9.1.0"
morfeusz2 = "^1.99.7"
protobuf = "3.20.2"
pytest = "^7.3.1"
pytorch-lightning = ">=1.5"
scikit-learn = "^1.2.2"
scipy = ">=1.10.1, <1.13"  # gensim requires `scipy.linalg.triu` removed in 1.13
sentencepiece = "^0.1.99"
tokenizers = "^0.13.3"
torch = ">=1.7.1"
tqdm = "^4.65.0"
transformers = "^4.29.2"
torchmetrics = "^1.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"

[tool.poetry.group.lint.dependencies]
flake8 = "*"
isort = "*"
nbqa = "*"
black = "*"

[tool.poetry.extras]
svm = [
    "matplotlib",
    "scikit-learn",
]
classifier = [
    "matplotlib",
    "pytorch-lightning",
    "scikit-learn",
    "torch",
    "torchmetrics",
    "transformers",
]
preprocessing = [
    "advertools",
    "gensim",
    "morfeusz2",
    "scipy",
]
regressor = [
    "accelerate",
    "pytorch-lightning",
    "scikit-learn",
    "torch",
    "torchmetrics",
    "transformers",
]
seq2seq = [
    "accelerate",
    "loguru",
    "more-itertools",
    "scikit-learn",
    "torch",
    "tqdm",
    "transformers",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
line_length = 120
combine_as_imports = true
profile = "black"
known_first_party = ["mim_nlp", "tests"]
skip = [
    ".git",
    ".vscode",
    ".idea",
    "__pycache__",
    ".ipynb_checkpoints",
    "stripped",
    "venv",
    ".venv",
    "dist",
    ".hooks",
]

[tool.pytest]
timeout = 120
tmp_path_retention_policy = 'none'

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = [
    "mim_nlp",
    "tests",
]

[tool.black]
line-length = 120

force-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | venv
  | .venv
  | _build
  | buck-out
  | build
  | dist
  | stripped
  | data
  | .hooks
)/
'''
